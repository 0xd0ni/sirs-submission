# -*- mode: ruby -*-
# vi: set ft=ruby :
# Ensure this Project is for Virtualbox Provider
ENV['VAGRANT_DEFAULT_PROVIDER'] = "virtualbox"

# Ensure the required plugins are globally installed
VAGRANT_PLUGINS = [
  "vagrant-vbguest",
  "vagrant-reload",
]
  VAGRANT_PLUGINS.each do |plugin|
    unless Vagrant.has_plugin?("#{plugin}")
      system("vagrant plugin install #{plugin}")
      exit system('vagrant', *ARGV)
    end
  end

# Start the process  
Vagrant.configure("2") do |config|
  config.ssh.insert_key = false
  config.vbguest.auto_update = false
  config.vm.box_check_update = false

  # create db vm
  config.vm.define "db" do |mgvb|
    mgvb.vm.box = "kalilinux/rolling"
    mgvb.vm.hostname = "db"
    mgvb.vm.network :private_network, ip: "192.168.56.10",virtualbox__intnet: "sw-1"
    # Provider Virtualbox
    mgvb.vm.provider "virtualbox" do |vb|
      vb.name = "db"
      vb.memory = "2048"
      vb.cpus = 1
      vb.gui=false
      vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-vms"]
    end # of vb
    # Shared folders
    if Vagrant::Util::Platform.windows? then
      # Configuration SPECIFIC for Windows 10 hosts
      mgvb.vm.synced_folder "../../a01-diogo-allan-stanislaw", "/home/vagrant/project",
        owner: "vagrant", group: "vagrant",
        mount_options: ["dmode=775","fmode=755"]
    else
      mgvb.vm.synced_folder "../", "/home/vagrant/project",
        mount_options: ["dmode=775", "fmode=755"]
    end # of shared folders
    # Provisioning with reload (reboot)
    mgvb.vm.provision :shell, path: "db/bootstrap_db.sh"
    end 

# create server vm
config.vm.define "server" do |mgvb|
  mgvb.vm.box = "kalilinux/rolling"
  mgvb.vm.hostname = "server"
  mgvb.vm.network :private_network, ip: "192.168.56.11",virtualbox__intnet: "sw-1"
  mgvb.vm.network :private_network, ip: "192.168.57.254",virtualbox__intnet: "sw-2"
  mgvb.vm.network "forwarded_port", guest: 22, host: 2222, auto_correct: true
  # Provider Virtualbox
  mgvb.vm.provider "virtualbox" do |vb|
    vb.name = "server"
    vb.customize ["modifyvm", :id, "--nic4", "nat"]
    vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-vms"]
    vb.customize ["modifyvm", :id, "--nicpromisc3", "allow-vms"]
    vb.memory = "2048"
    vb.cpus = 1
    vb.gui=false
    end # of vb
  # Shared folders
  if Vagrant::Util::Platform.windows? then
    # Configuration SPECIFIC for Windows 10 hosts
    mgvb.vm.synced_folder "../../a01-diogo-allan-stanislaw", "/home/vagrant/project",
      owner: "vagrant", group: "vagrant",
      mount_options: ["dmode=775","fmode=755"]
  else
    mgvb.vm.synced_folder "../", "/home/vagrant/project",
      mount_options: ["dmode=775", "fmode=755"]
  end # of shared folders
  # Provisioning with reload (reboot)
  mgvb.vm.provision :shell, path: "server/bootstrap_server.sh"
end 

# create client vm
config.vm.define "client" do |mgvb|
  mgvb.vm.box = "kalilinux/rolling"
  mgvb.vm.hostname = "client"
  mgvb.vm.network :private_network, ip: "192.168.57.12",virtualbox__intnet: "sw-2"
  mgvb.vm.network "forwarded_port", guest: 22, host: 2222, auto_correct: true
  # Provider Virtualbox
  mgvb.vm.provider "virtualbox" do |vb|
    vb.name = "client"
    vb.customize ["modifyvm", :id, "--nic3", "nat"]
    vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-vms"]
    vb.memory = "2048"
    vb.cpus = 1
    vb.gui=false
  end # of vb
  # Shared folders
  if Vagrant::Util::Platform.windows? then
    # Configuration SPECIFIC for Windows 10 hosts
    mgvb.vm.synced_folder "../../a01-diogo-allan-stanislaw", "/home/vagrant/project",
      owner: "vagrant", group: "vagrant",
      mount_options: ["dmode=775","fmode=755"]
  else
    mgvb.vm.synced_folder "../", "/home/vagrant/project",
      mount_options: ["dmode=775", "fmode=755"]
  end # of shared folders
  # Provisioning with reload (reboot)
  mgvb.vm.provision :shell, path: "client/bootstrap_client.sh"
end # of mgvb
end # of config

#cliente -> mvn e jdk