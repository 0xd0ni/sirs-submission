<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>main.java.pt.tecnico.a01</groupId>
  <artifactId>MediTrack</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>${project.artifactId}</name>

  <properties>
  
  <!-- compiler properties -->
		<java.version>1.8</java.version>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
        <mongodb-driver-sync.version>4.11.1</mongodb-driver-sync.version>
        <mongodb-crypt.version>1.8.0</mongodb-crypt.version>
        <!-- Have to keep version 1.2.12 because slf4j-api isn't optional in mongodb-crypt and is using an old version. -->
        <!-- See https://jira.mongodb.org/browse/JAVA-5240 for a workaround-->
        <logback-classic.version>1.2.12</logback-classic.version>
		
		<exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>
		<appassembler-maven-plugin.version>2.1.0</appassembler-maven-plugin.version>

		<javax.annotation-api.version>1.3.2</javax.annotation-api.version>
		<jaxb.version>2.3.0</jaxb.version>
		<gson.version>2.10.1</gson.version>

		<!-- application properties - can be overriden in command line with -D -->
		<p>main.java.pt.tecnico.a01</p>
		<c>MediTrack</c>
		<mainclass>${p}.${c}</mainclass>
		<!-- arguments are defined in exec plugin -->

  </properties>

  <dependencies>
    <!-- https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api
		explicitly required since Java 9 -->
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>javax.annotation-api</artifactId>
			<version>${javax.annotation-api.version}</version>
		</dependency>
		<!-- JAX-B - explicitly required since Java 9 -->
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>${jaxb.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-core</artifactId>
			<version>${jaxb.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>${jaxb.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>${gson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sparkjava</groupId>
			<artifactId>spark-core</artifactId>
			<version>2.5</version>
		</dependency>

		<dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongodb-driver-sync</artifactId>
            <version>${mongodb-driver-sync.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongodb-crypt</artifactId>
            <version>${mongodb-crypt.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback-classic.version}</version>
        </dependency>
				
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>17.0.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-web</artifactId>
			<version>17.0.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-fxml</artifactId>
			<version>17.0.0.1</version>
		</dependency>
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>okhttp</artifactId>
			<version>4.12.0</version>
		</dependency>
  </dependencies>

  <build>
		<!-- change source code location -->
		<sourceDirectory>src/</sourceDirectory>

		<plugins>
			<!--  Plugin used to compile the sources of your project. Java 9 requires at least version 3.7.0 to properly handle modules. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<!-- Plugin that provides two goals to execute system and Java programs -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>${exec-maven-plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<programs>
						<program>
							<mainClass>main.java.pt.tecnico.a01.MediTrack</mainClass>
							<name>mediTrack</name>
							<arguments>
								<!-- can be defined here with multiple argument tags, 
								or in command line with -Dexec.args="arg0 arg1 arg2" -->
							</arguments>
						</program>
						<program>
							<mainClass>main.java.pt.tecnico.a01.server.ServerApplication</mainClass>
							<name>serverApplication</name>
							<arguments>
								<!-- can be defined here with multiple argument tags, 
								or in command line with -Dexec.args="arg0 arg1 arg2" -->
							</arguments>
						</program>
					</programs>
				</configuration>
			</plugin>
			<!-- The Application Assembler plug-in generates scripts for starting Java applications. 
				All dependencies and the artifact of the project itself are placed in a 
				generated Maven repository in a defined assemble directory. -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
				<version>${appassembler-maven-plugin.version}</version>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>assemble</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<programs>
						<program>
							<mainClass>main.java.pt.tecnico.a01.MediTrack</mainClass>
							<name>MediTrack</name>
						</program>
						<program>
							<mainClass>main.java.pt.tecnico.a01.server.ServerApplication</mainClass>
							<name>ServerApplication</name>
						</program>
					</programs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.openjfx</groupId>
				<artifactId>javafx-maven-plugin</artifactId>
				<version>0.0.1</version>
				<configuration>
					<mainClass>main.java.pt.tecnico.a01.client.Client</mainClass>
				</configuration>
			</plugin>
		</plugins>
	</build>


</project>